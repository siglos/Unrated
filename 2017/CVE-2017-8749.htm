<script>
function fuzz_1_2(a_0, a_1, a_2, a_3) {try{v_0_2_0 = v_0_2_0.splice(0, 61 % 20, v_0_4_4, v_0_6_0, v_0_6_1, Position.prototype)}catch(exception){}}
function fuzz_2_0(a_0, a_1, a_2, a_3) {try{v_0_2_6.every(v_0_5_0, v_0_8_3)}catch(exception){}return v_0_7_3;}
function fuzz_2_1(a_0, a_1, a_2, a_3) {try{v_0_2_5.every(v_0_5_7, v_0_7_5)}catch(exception){}}
try{v_0_2_0 = [];}catch(exception){}
try{v_0_2_0.length  = 0xb562;}catch(exception){}
try{v_0_2_5 = [['R','N','B','Q','K','B','N','R'],['P','P','P','P','P','P','P','P'],[' ',' ',' ',' ',' ',' ',' ',' '],['p','p','p','p','p','p','p','p'],['r','n','b','q','k','b','n','r']];}catch(exception){}
try{v_0_2_6 = [{}, [], '']}catch(exception){}
try{v_0_3_0 = new Error();}catch(exception){}
try{ v_0_4_0 = new Float32Array(new ArrayBuffer(255 * 4), 4 * 6); }catch(exception){}
try{ v_0_4_4 = new Int8Array(); }catch(exception){}
try{ v_0_4_5 = new Uint16Array(buffer_2x, 2 * 7, 3); }catch(exception){}
try{ v_0_5_0 = fuzz_1_2; }catch(exception){}
try{ v_0_5_7 = new Function('eval("return v_0_8;");'); }catch(exception){}
try{ v_0_6_0 = new Intl.Collator(); }catch(exception){}
try{ v_0_6_1 = new Intl.Collator(["ja-JP", "xx-yy"]); }catch(exception){}
try{ v_0_7_3 = new WeakMap(); }catch(exception){}
try{ v_0_7_5 = new WeakMap(console.count, Date.prototype.getMinutes); }catch(exception){}
try{ v_0_7_7 = new Set(URIError.__lookupGetter__); }catch(exception){}
//try{v_0_8_2 = new RegExp(r_pattern_0_4, r_flag_0_6);}catch(exception){}
try{v_0_8_3 = new RegExp('^xyz', 'gi');}catch(exception){}
try {
for (var zzz = 0; zzz < 200; ++zzz) {
Array.prototype.forEach.call(v_0_4_0, fuzz_2_1, v_0_7_7);
v_0_2_6.reduceRight(fuzz_2_0, v_0_3_0);
}
} catch(exception){}
</script>
<script>
try{delete Intl.Collator.prototype.resolvedOptions;}catch(exception) {}
</script>
